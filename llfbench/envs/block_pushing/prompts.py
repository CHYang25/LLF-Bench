
bp_instruction = (
    "Your job is to control a robot arm to solve a {task} task. You will get observations of the robot state and the world state in the form of json strings. Your objective is to provide control inputs to the robot to achieve the task's goal state over multiple time steps. Your actions are 2-dim vectors, which control the movement of the robot's end effector in the x and y directions. You action at each step sets the robot's target pose for that step in relative coordinate.",
)

r_feedback = (
    "Your reward for the latest step is {reward}.",
    "You got a reward of {reward}.",
    "The latest step brought you {reward} reward units.",
    "You've received a reward of {reward}.",
    "You've earned a reward of {reward}.",
    "You just got {reward} points.",
    "{reward} points for you.",
    "You've got yourself {reward} units of reward.",
    "The reward your latest step earned you is {reward}.",
    "The previous step's reward was {reward}.",
    "+{reward} reward",
    "Your reward is {reward}.",
    "The reward you just earned is {reward}.",
    "You have received {reward} points of reward.",
    "Your reward={reward}.",
    "The reward is {reward}.",
    "Alright, you just earned {reward} reward units.",
    "Your instantaneous reward is {reward}.",
    "Your rew. is {reward}.",
    "+{reward} points",
    "Your reward gain is {reward}."
)

fp_feedback = (
    "You should go {expert_action}.",
    "I recommend that you move {expert_action}.",
    "You should move {expert_action}.",
    "I suggest you move {expert_action} relative to your current position.",
    "Moving {expert_action} will help you get to the goal faster.",
    "Try moving {expert_action}.",
    "One thing to try is to go {expert_action}.",
    "The direction {expert_action} looks promising.",
    "Aim to move {expert_action} at the next step.",
    "My advice is to move {expert_action}.",
    "Go {expert_action} relative to where you are now.",
    "I would try moving {expert_action} if I were you.",
    "Consider going {expert_action}.",
    "Attempt to move {expert_action} next.",
    "My suggestion is that you move {expert_action}.",
    "Moving {expert_action} next looks promising.",
    "I advise you to go {expert_action}.",
    "Next, move {expert_action}.",
    "Moving {expert_action} now is a good idea.",
    "If you want a tip, {expert_action} is a good direction to aim for next.",
    "I urge you to move {expert_action}.",
)

hn_feedback = (
    "based on the state the action is not helping.",
    "the action is ineffective based on the state.",
    "the state shows this action is unhelpful.",
    "the state indicates this action is not effective.",
    "this action does not benefit the current state.",
    "the state confirms this action is unsuitable.",
    "the state makes this action ineffective.",
    "the state shows this action is disadvantageous.",
    "the state validates that this action is not helpful.",
    "the state reveals this action is unproductive.",
    "this action falls short given the state conditions.",
    "the state suggests this action is suboptimal.",
    "this action fails to utilize the current state.",
    "the state undermines the success of this action.",
    "this action is misaligned with the state context.",
    "the state hinders this action performance.",
    "this action clashes with the state requirements.",
    "the state exposes the flaws in this action.",
    "this action struggles under the current state.",
    "the state renders this action impractical.",
    "this action is poorly suited to the state dynamics.",
    "the state contradicts the value of this action.",
    "this action is weakened by the state features.",
    "the state signals this action as a poor fit.",
    "this action falters given the state constraints.",
    "this action does not match what the state requires.",
    "the state does not justify this action.",
    "this action is a poor choice for the current state.",
    "the state and this action are at odds.",
    "this action fails to address the state needs.",
    "choosing this action here is not advisable.",
    "this action is not the right move for this state.",
    "the state makes this action less effective."
)

hp_feedback = (
    "the action is helpful based on the state.",
    "this action aligns with the current state.",
    "the state supports this action.",
    "this action is appropriate given the state.",
    "the state indicates this action is beneficial.",
    "the state confirms this action is effective.",
    "the state makes this a suitable action.",
    "the state shows this action is advantageous.",
    "this action is validated by the state.",
    "the action is effective based on the state.",
    "this action fits well with the state conditions.",
    "the state suggests this action is optimal.",
    "this action leverages the current state successfully.",
    "the state provides a basis for this action success.",
    "this action is justified by the state context.",
    "the state enables this action to perform well.",
    "this action corresponds to the state requirements.",
    "the state reinforces the value of this action.",
    "this action capitalizes on the state features.",
    "the state renders this action favorable.",
    "this action is well-suited to the state dynamics.",
    "the state backs this action as a good choice.",
    "this action thrives under the current state.",
    "the state highlights the merit of this action.",
    "this action is a strong match for the state.",
    "this action is perfectly suited for the state.",
    "the state clearly favors this action.",
    "choosing this action is wise given the state.",
    "this action maximizes the state potential.",
    "the state and this action are in harmony.",
    "this action is the best response to the state.",
    "the state makes this action highly effective.",
    "this action is a perfect fit for the state."
)
